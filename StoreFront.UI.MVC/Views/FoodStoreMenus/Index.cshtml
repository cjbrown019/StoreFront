@model IPagedList<StoreFront.DATA.EF.Models.FoodStoreMenu>

@{
    ViewData["Title"] = "Index";
}

@using X.PagedList
@using X.PagedList.Mvc.Core




<h1 class="text-decoration-underline mt-3 ms-4">All Products</h1>

<form asp-action="Index" method="get">
    <div class="container m-auto">
        <div class="row">


            <div class="col-lg-5 col-sm-2 offset-md-2 offset-sm-0">
                <label for="searchTerm" class="">
                    Search
                </label>
                <input type="text" name="searchTerm" class="form-control w-50 bg-dark text-light" placeholder="(apple, rice, cereal...)" />

            </div>
            <div class="col-lg-5 col-sm-2">
                <label for="categoryId" class="">
                    Filter
                </label>
                <select name="categoryId" class="form-control text-center mb-3 w-50 bg-dark text-light" asp-items="ViewBag.CategoryId">
                    <option value="0">[Filter by category]</option>
                </select>
            </div>


        </div>
       
           

                <input type="submit" class="btn  btn-warning mx-auto mt-auto w-50 d-block" id="subBtn" />
            
        


    </div>
</form>



@*<table class="table">
    <thead>
    <tr>
    <th>
    @Html.DisplayNameFor(model => model.FoodName)
    </th>
    <th>
    @Html.DisplayNameFor(model => model.FoodDesc)
    </th>
    <th>
    @Html.DisplayNameFor(model => model.FoodPrice)
    </th>
    <th>
    @Html.DisplayNameFor(model => model.InStock)
    </th>
    <th>
    @Html.DisplayNameFor(model => model.FoodImg)
    </th>
    <th>
    @Html.DisplayNameFor(model => model.Category)
    </th>
    <th>
    @Html.DisplayNameFor(model => model.Supplier)
    </th>
    <th></th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td>
    @Html.DisplayFor(modelItem => item.FoodName)
    </td>
    <td>
    @Html.DisplayFor(modelItem => item.FoodDesc)
    </td>
    <td>
    @Html.DisplayFor(modelItem => item.FoodPrice)
    </td>
    <td>
    @Html.DisplayFor(modelItem => item.InStock)
    </td>
    <td>
    @Html.DisplayFor(modelItem => item.FoodImg)
    </td>
    <td>
    @Html.DisplayFor(modelItem => item.Category.CategoryName)
    </td>
    <td>
    @Html.DisplayFor(modelItem => item.Supplier.Address)
    </td>
    <td>
    <a asp-action="Edit" asp-route-id="@item.FoodId">Edit</a> |
    <a asp-action="Details" asp-route-id="@item.FoodId">Details</a> |
    <a asp-action="Delete" asp-route-id="@item.FoodId">Delete</a>
    </td>
    </tr>
    </tbody>
    </table>*@

<section class="py-2">
    <div class="container px-4 px-lg-5 mt-3">
        <div class="row gx-4 gx-lg-5 row-cols-2 row-cols-md-3 row-cols-xl-4 justify-content-center">
            @foreach (var item in Model)
            {
                <!-- Section-->
                <div class="col mb-5">
                    <div class="card shadow-sm">
                        <!-- Product image-->
                    <img src="~/images/@item.FoodImg" alt="@item.FoodDesc" class="card-img-top img-fluid" />
                        <div class="card-body py-2 px-4">
                            <div class="text-center">
                                <!-- Product name-->
                            <h5 class="fw-bolder ProdName"><a class="ProdName" asp-action="Details" asp-route-id="@item.FoodId">@Html.DisplayFor(modelItem => item.FoodName)</a></h5>


                                <!-- Product price-->
                            @Html.DisplayFor(modelItem => item.FoodPrice)
                            </div>
                        </div>
                        <!-- Product actions-->
                    <div class="card-footer p-4 pt-0 border-top-0 bg-transparent">

                            <div class="text-center"><a class="btn btn-outline-dark mt-auto" asp-action="AddToCart" asp-controller="ShoppingCart" asp-route-id="@item.FoodId">Add to cart</a></div>
                        </div>
                    </div>
                </div>



            }
        </div>
        <div class="row mt-5">
            <div class="w-50 mx-auto text-center">

                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

                <div class="w-100">

                    @Html.PagedListPager(
                    Model,
                    page => Url.Action("TiledProducts",
                    new { page, searchTerm = ViewBag.SearchTerm, categoryId = ViewBag.Category } )
                    )

                </div>

            </div>
        </div>
    </div>
</section>    